---
include:
- '/k8s/tremplin-api/.deploy-tremplin-api-k8s.yml'
- '/k8s/tremplin-frontend/.deploy-tremplin-frontend-k8s.yml'

variables:
  DOCKER_HOST: tcp://localhost:2375
  IMAGE_INFRA_BASE_NAME: "infra/images-docker"
  DOCKER_VERSION: "18.06"
  NODE_VERSION: "10.15.3"
  NGINX_VERSION: "1.12-alpine"
  IMAGE_TAG: $CI_COMMIT_SHA
  ENVIRONMENT: $CI_ENVIRONMENT_NAME
  TREMPLIN_REGISTRY: $CI_REGISTRY_IMAGE
  API_PORT: 1337
  FRONTEND_PORT: 80

stages:
- "Prepare"
- "Build and Push Docker Image"
- "Deploy Tremplin"
- "Send Url"
- "Delete k8s Objects"

###########################################
###               PREPARE               ###
###########################################

prepare-deploy-id:
  stage: "Prepare"
  image:
    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
    entrypoint: [""]
  before_script:
  - envsubst < k8s/scripts/get-deploy-id.sh > k8s/scripts/get-github-deploy-id.sh
  script:
  - sh k8s/scripts/get-github-deploy-id.sh
  environment:
    name: dev.factory
  except:
  - master
  artifacts:
    paths:
    - github_deploy_id

prepare-deploy-id-prod:
  stage: "Prepare"
  image:
    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
    entrypoint: [""]
  before_script:
  - envsubst < k8s/scripts/get-deploy-id.sh > k8s/scripts/get-github-deploy-id.sh
  script:
  - sh k8s/scripts/get-github-deploy-id.sh
  environment:
    name: incubateur
  only:
  - master
  artifacts:
    paths:
    - github_deploy_id

###########################################
###            BUILD IMAGES             ###
###########################################

build-and-push-tremplin-api-image:
  stage: "Build and Push Docker Image"
  image: docker:$DOCKER_VERSION
  services:
   - docker:$DOCKER_VERSION-dind
  before_script:
  - cd packages/api
  - echo "$CI_JOB_TOKEN" | docker login $CI_REGISTRY -u gitlab-ci-token --password-stdin
  script:
  - >-
    docker build
    --build-arg NODE_VERSION=$NODE_VERSION
    -t "$CI_REGISTRY_IMAGE/api:$CI_COMMIT_SHA" .
  - docker push "$CI_REGISTRY_IMAGE/api:$CI_COMMIT_SHA"

build-and-push-tremplin-frontend-image-dev:
  stage: "Build and Push Docker Image"
  image: docker:$DOCKER_VERSION
  services:
   - docker:$DOCKER_VERSION-dind
  before_script:
  - HASH_BRANCH_NAME=$(printf "$CI_COMMIT_REF_NAME" | sha1sum | cut -c1-5)
  - cd packages/app
  - echo "$CI_JOB_TOKEN" | docker login $CI_REGISTRY -u gitlab-ci-token --password-stdin
  script:
  - >-
    docker build
    --build-arg NODE_VERSION=$NODE_VERSION
    --build-arg NGINX_VERSION=$NGINX_VERSION
    -t "$CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA" .
  - docker push "$CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA"

##########################################
### DEPLOY TREMPLIN TO K8S DEV CLUSTER ###
##########################################

deploy-tremplin-api-dev:
  stage: "Deploy Tremplin"
  extends: .deploy-tremplin-api-k8s
  variables:
    K8S_SERVER: $K8S_SERVER_DEV
    K8S_CLUSTER_NAME: $K8S_CLUSTER_NAME_DEV
    K8S_NAMESPACE: $K8S_NAMESPACE_DEV
    K8S_USERNAME: $K8S_USERNAME_DEV
    K8S_CONTEXT: $K8S_CONTEXT_DEV
    K8S_TOKEN: $K8S_TOKEN_DEV
    PORT: ${API_PORT}
  environment:
    name: dev.factory
  except:
  - master

deploy-tremplin-frontend-dev:
  stage: "Deploy Tremplin"
  extends: .deploy-tremplin-frontend-k8s
  variables:
    K8S_SERVER: $K8S_SERVER_DEV
    K8S_CLUSTER_NAME: $K8S_CLUSTER_NAME_DEV
    K8S_NAMESPACE: $K8S_NAMESPACE_DEV
    K8S_USERNAME: $K8S_USERNAME_DEV
    K8S_CONTEXT: $K8S_CONTEXT_DEV
    K8S_TOKEN: $K8S_TOKEN_DEV
    PORT: ${FRONTEND_PORT}
  environment:
    name: dev.factory
  except:
  - master

###########################################
### DEPLOY TREMPLIN TO K8S PROD CLUSTER ###
###########################################

deploy-tremplin-api-prod:
  stage: "Deploy Tremplin"
  extends: .deploy-tremplin-api-prod-k8s
  variables:
    K8S_SERVER: $K8S_SERVER_PROD
    K8S_CLUSTER_NAME: $K8S_CLUSTER_NAME_PROD
    K8S_NAMESPACE: $K8S_NAMESPACE_PROD
    K8S_USERNAME: $K8S_USERNAME_PROD
    K8S_CONTEXT: $K8S_CONTEXT_PROD
    K8S_TOKEN: $K8S_TOKEN_PROD
    HASH_BRANCH_INGRESS: ''
    PORT: ${API_PORT}
  environment:
    name: incubateur
  only:
  - master

deploy-tremplin-frontend-prod:
  stage: "Deploy Tremplin"
  extends: .deploy-tremplin-frontend-prod-k8s
  variables:
    K8S_SERVER: $K8S_SERVER_PROD
    K8S_CLUSTER_NAME: $K8S_CLUSTER_NAME_PROD
    K8S_NAMESPACE: $K8S_NAMESPACE_PROD
    K8S_USERNAME: $K8S_USERNAME_PROD
    K8S_CONTEXT: $K8S_CONTEXT_PROD
    K8S_TOKEN: $K8S_TOKEN_PROD
    PORT: ${FRONTEND_PORT}
  environment:
    name: incubateur
  only:
  - master

###########################################
###         SEND URL TO GITHUB          ###
###########################################

send-url:
  stage: "Send Url"
  image:
    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
    entrypoint: [""]
  before_script:
  - HASH_BRANCH_NAME=$(printf "$CI_COMMIT_REF_NAME" | sha1sum | cut -c1-5)
  - export HASH_BRANCH_NAME=$HASH_BRANCH_NAME
  - export URL=http://$HASH_BRANCH_NAME-tremplin.${CI_ENVIRONMENT_NAME}.social.gouv.fr/
  - export DEPLOY_ID=$(cat github_deploy_id)
  - envsubst < k8s/scripts/send-url.sh > k8s/scripts/send-url-to-github.sh
  script:
  - sh k8s/scripts/send-url-to-github.sh $CI_COMMIT_REF_NAME
  environment:
    name: dev.factory
  except:
  - master

send-url-prod:
  stage: "Send Url"
  image:
    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
    entrypoint: [""]
  variables:
    URL: http://tremplin.$CI_ENVIRONMENT_NAME.social.gouv.fr/
  before_script:
  - export DEPLOY_ID=$(cat github_deploy_id)
  - envsubst < k8s/scripts/send-url.sh > k8s/scripts/send-url-to-github.sh
  script:
  - sh k8s/scripts/send-url-to-github.sh $CI_COMMIT_REF_NAME
  environment:
    name: incubateur
  only:
  - master

#######################################
###        DELETE K8S OBJECTS       ###
#######################################

delete-pods:
  stage: "Delete k8s Objects"
  image:
    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
    entrypoint: [""]
  variables:
    K8S_SERVER: $K8S_SERVER_DEV
    K8S_CLUSTER_NAME: $K8S_CLUSTER_NAME_DEV
    K8S_NAMESPACE: $K8S_NAMESPACE_DEV
    K8S_USERNAME: $K8S_USERNAME_DEV
    K8S_CONTEXT: $K8S_CONTEXT_DEV
    K8S_TOKEN: $K8S_TOKEN_DEV
  before_script:
  - /apps/create-kubeconfig.sh
  script:
  - python3 k8s/scripts/delete-k8s-objects.py
  only:
  - master
